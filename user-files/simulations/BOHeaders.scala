package BO.Framework
  
import scala.concurrent.duration._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.jdbc.Predef._
import scala.util.Random


object BOHeaders{
        val headers_0 = Map( "Accept" -> "*/*", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "script", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-site", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_10 = Map( "accept" -> "application/json, text/plain, */*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "content-type" -> "application/json;charset=UTF-8", "fflecat0rx-a" -> "OnoAC6Ddj0AGleRMTLR7OUN=VkMLCaaO464B206Q6bMqg1r3=7yvnVvhYMRFIhcVG3oOAijc_5H7vMiT0aMxRe9bGTq7aAoLZOlJqcAtwQxVxGGCWbkpIkdydM_k=7fRHSEQSk_ooYmP7b=sK7w2hp67bzBoLGN7-7g0ViuejVfVcWMfNH8bk6AZd7q6_L8c9-ou2LF2n3jtvsmGyEOL6oLpYnithY2Mw-Dpy5k4PY3kRqfwD91J8-aA-8IPn0-yL3HUy5MeZGfjktm79ciSvApUH44hZLwknH5LQkbkQgnntf_tPKS7eLabp6IjaFmV4oHB5fDiemwUJaSEhJHTBI-VkPmlpTeAJ7d7YHfq0Mn2YbsPL=rg6JyiVQm3-3wCB0KnCankuAK3gx9xDY-407=bpM-wugyyNQWqoyJ7SFWopqt5ThiQmEKxHMuIgVR5-DlQ88vCQZEN8FItew9Ao8H8rKkD2pFPTvHtYo6BAWgPTzGxlFFx-7Rs7r9fKCSlQUTFNcLBZmriSrV9OW6YdU7QtM0p3TBJW37zQ8y8ysHzQ5_5mau7gYSnI=hcAJNofsbTGnGSBEYZRb-A7xp04PVEWiKAuHt9RIrAd8r3h=k28aubNWJaNigCZaOpDQRicusktPGWAxnHwSh4gZIGdjkZB9RHOTrkI0c_=B_wWCfCNSW-n1Yh7A2yZZqf_iI-AZ5Dg0blsnled1Q8j3_hC0745QIIefccYlOjumTKR=cxUQTO2vU7Yc6bUD5p6Y2F1H3yrKaagRCRed4M_k7Fz-O7Cy56_5u-vAo79e-8aHA7wP9hsq9A7FETMMMkrM4OqjOmNA-ldLgrFlRnEoykA6LsT-IqkYVOhH=UI6K4e9FOLANqmSttZowP1KZxJ=9=W4zJ4ODGh8yEUpbZBdCxHTn2Pv5nklqeP1JxEN_sobFRhJ7mzt_s1i7HJ-AAc5d8o=d0gAq1I3yqVZZKEGwuFh5cWG92izYTkpxlDBnGKiLiy9jIuA-E0lxp4Lh3khdpEkcDhnhSMes25PycMbiUNKpdj_7BS4HzTBhcNNxOuHFSyWIsa5FaFH-sIDP-SDAdqDpoxGup4s9eUPsBjZIeNm=fuD9Kd5nYo8lwS6vFBLb475Wp9RH-OtUER0k1K_R7sWVS=tr7WswBtAUwEqN57h942c-KqCC34fis2dRL242iy7ChsU3m=BhpBv2A2U72j9hmSAAhTWDOWxqNU_r84iwVA47L7DL2D2QEawV7iCIBepd7ghO0UQ3lVEI57yzisk0PgkSnDfysbyt5F72chAUsmDk-_yB5bJwK9-k59l_V0pAUJR1zsRqNIOAjlo7QHOt92iwdsx0QDZIb3i=JYcC5LR2AD1v1Dj=pEDgmnsK-dbEV8__bEgeqwErUe37u631b6GyOH-AADNmkfxf0emdIMixm52WsMqwB3J5bivDNsFmcPM3utULqhcQcWP4FCGH10kSomhQ=tERvb2iwSl3J4ulSNrJcuqo-gm5Bbko41Qt6e0e-1Vy08=QFeM1VxBWA-Gp_yUSMePSB22LqO9UqzdsIG1z7Wfd3eEEofgt4MbQI0f_ig5COffG6eu_4RYLqwW9558UpOWvh1OjeEVJKwNGRaNsd1N-oauQkiWMxay7OsZHFSHd9Dq7WQisW3r=zUwHAIAi5SOsAT-Yuw_jsbTBFN6MHxelts6B9YgULQ49MtxAvxiHKT=xhYQ8JV4Rg3O7ZdWDY-1UMQ8Sp0Cqq2Oq5PnFk1zP4AVd5qS3f4IjFzyVtaLQHIJK2H52_V6F7qQr4gdBHAdAa4d2=BvBT0NaCOaGl_2L1rC9gfrwrG3u0HhVq5YUcTTombGOhoP8xGl0IO0IhpOIpoAyQL8cRf0Ey8OvioTMAd_bPJJ_L4r5G9zd1kn-VeRBM-K41O1_vhY_B-u6yGW2Slimbthb0FFRL1FLSF1gpoTCZDNp2KmrSaSR=1LN4JnBbz4FPi3u9A0rJ2hm2lMrQGQL5dYfk1b5e6c4S98_unIC3dKoxqOkhw1B-PMpkbc4A1AVyCu67IYUZhPqivoThql=qYEEloarGDKZDijz1dltVBvuEWWMwAqr=nA5y8EtyZBiGDCJN1AWg8WMDPautlzM4YoGkjUDhl89eY97dNfflaqkHZZap9vk3oef31Ek2RtmBuLJddhKyh-cxiutxT4k=TOsW04ZzyfMQclg3QVY_tatCn1CRczj=f6Y5dwkH7QkWh7-NVRa5SvwwRMA5b7lAwYYWlfgQ72=i6DpYy2zYD6vUDDQqRd8S3oYg9oBOURL4V8=DZd-6ZfT=xkr227a8ZI8Wm28=ynAAKdGqI55JTU1F0dEre8rzTAvfiFPRxEl06HMqjgg9pLgc_WbsjIm9Vo9jyxELYMtu4-Wqg1fu2Y8oyEyzk91hwxLGBwOponTo28jScfbMVhuAktNvjU03Ibs0TK1UnwdFW_gwTx_rw4gNDe8Ja7ctmNJgj6mwxWZ64vuxNOPAox7U_jsqSPWJAibVyxTDZ3-7eeKEYloPV-1CPgV6qcP9yBIN0TGfw8mZlUrQS70bjk2eHfnpqgN1x-HynaU_GgnVY_cKbgLI1-e4z5tN1fThMgYIElGtcqekjhNQ_zSw-q-HI3BHl84C8Cvm4hRYi5YHgMJ0uo6k0RkfzQY16Mis806Fz1h8dpx528r54L7EpW_JY_VWSayU=gnBQ5UF4QBtQ8pUNn-qHMuByPFxuvLWBxslobHqBC1my=ew=p=20S9bi_4LSI9l5xFER9Go5gYWzbZJu8mbNMtbKGjfyczL0HB9k0gavQ8tG=fv-yGcsPP8gb=a0hIuzkx7RKSEEiOVIuY6jEJNbf6dpt64VR_-8N66zHZDvBIylYKUMIP4RFCIpJ==YrFKhYvcCe0uC2SI90ZnxBBkIhUTBOP=qN-3DAekGUDki-aoTPBtFGm79npHNBfBjoyQtwQdcAnf2lDgiLSeYzZPAO1tdk3o4ytDvph8TrfdKTOjrUk4kxQmNsxWpy3oT6gHQw7a2FOGTMhsTPKwYHw3a_sjGOE2iS1AM2pCl2w=JFJAH2KjSpaqJxyu4KEA-8n0rp40h3L_O13p34xv-Rjo2AkF2nnJ4uUVZ_-v5jsw59cLh=1JalgAK6OzGWCaU6rn9clMk8JnL52yV9SAp7zomLgEhYd_xCc8lyVdRtjArvs4tVvaPOd2WjyvSua8yCGYtnM2T0OGr6YCDSVgsHn6-tj6LmlLM0YfqoQFQhtAo1jgdf0jrUnzvLjt_0FrodcbBRDqkixDhbWOC93vT--_BfW3=enZqj=HfxTC6YbvAtfoSnB7jsRsqUHhon7BcWmeyUZyW9ByTaj0Y=5wbltRkkrWncuctZBtN1beaHz2PA-KWltLQvwcMTjNrWq1AnUgD-BSoZAlyxU-miOnJ0oKih52u7xd_mOLL93uE4tndiI_pp2-Mje8bJLzZkg7r4IBCt2=7AAk-Fc6xU-dQh1krYFj2Yl1vTRFNwSGRH=OKIhqbSdb6rtNVv1MiC_UH2zScB1vFT70xKBjbnVySsBSkHJUcMf-nqKHsGpdAEGlkC8ONkPgCgyJy-K9q7lmgSkC2ek-h2GnrxCd70AhwxQu2IbIBtkYEW_vD4VWsjWVjUbyWcH3wG_uqGtKFubhHgQs3nVBrIduw2KeTKgmw=TIdapDTofJboSMHU-u7jJ5R_xS4doAQifnFdvfOwEW=eag0jGn73ACMT_xJwYYaeNYipG43q5A8DxO20KzzPvGsOuo9KCkEoVpaN7FPCYD0UzPoBaUiwuxKBqY5bCRbC-WZSKp_UnHLY5_ruZKN4q7y_goFD0Ud8V9MMlQaZN4mKfEj6ZA_j9Z0m-hSiQaVw9n9hAQ9AhJsSov63RSm48n2CLYLcgK0S_=bxARkxtBxsDSEWSecMu4SEbyUJVRGgYCDkEECExZD-egDbbU2IC_TRoPw4fApmRwHG1tuJ2wh2G3zr2BAp7C-OrH7Jn-UccLhlSzOD1sWCHRFA6vNqwElElOPK6AzoMbWIa7iacYY7j0wV6spPIiz0igeTPZvum9OO4us3hA-JJkZ1TsjcE8skL_H3SAUUVUpfplR8AuKaVFI0jVoeZwCQnb-=YYPtK5rki4t4RWLwQ=hMBHP_23LCMTYhfcMK4Y-AUVZ61PZUTObBN_sVrrLRwQ8GgZiF1cqnFakO4oUr_WW9cvPcUwn1EstBUF7lPpkaQS9EizHCMu74m=faoEC44a8iZ3KOUzlfNoOY3MzdDpjCn_xT5Ghs=yASNiUzRukvaxQphL0ogn2PnDCtWTOH6adZA-zSnvI3LBWDjVHT_g_E1DlvWCpS3dtxRo54RQYe-_Wx_3Nk=xMQ3l_ozjIUWptWI6Q1PbDa2ab2P=GpRm=pFfbjDhTqaesKvFeCsNQ4=2B01FPnNckFrI544h=fmqQmZkAUp1zmQu7m3FkVF3jhMQPcligQju9A2BaG7RVxqz1bQUZHjCPsfU-JNcUlHmlR3SsiDWf8sCCYtpdgNCymCiQ8Q4HxWO-daHD1EYe6Sg5L_SkC9MHB6i7-ldks32d3cqYZc-J3RHw8Djg1y=cHkLsWySt4zhgG3K9DNo2IeE=KGbcUUO6=sb0KVSMBehbn_1sHi1j_u5DvoucLUJsx8o0NAEDZNoo=eTjsCy2AlSPQNvUvCsWY9zW7yV5NIV4Nib=lmQWBiMg10J58ZmZ1SZYtBhTEmhpc9jUhUtHsjnC7ikSs=gegaFg-g8h-NwBJP_zh7u8BqsyW_Kn8=yK0uKF0qmsEFzO4NaRfcpNlHnGvw7ZvbAmJxc4M9ypL-PyesCPJr8ZuTMQvDm7IHZsv3Hqn88Uty43mAT1vznLFVjIeUgt_gntCeyWiKad_3GUYcvB=jaZ4Ku3lb4seTMukh_KI1R0vwBgN6i3endGp1w7i1IaMdlecFEVhscvAuOJIkp9brja00GUn-NBO6KHtjeHG5KL1JjZw2UI1xgJuu8gEEDExY4OogBhWrwCgIurI-s1N31khlOLVqHxxyevt0n77wb95ljtFmucatfGPqb-lJF5HM7PQe4ZWqw7gkSpT67fsIeVtQetZWviZozHnx2FOpFjvtnhC4JitVEZ-CgydVhy=mtij=K005S6NY59ZKosT3iOiKoQOmgIWPxMTCMA1Jexnzw-chfmpRvowF81QNOFLOVwFf2ZldJOL4r=6usZ_vAi_5gd7ZsTlZ7exOoqlQBj1sWK-gKlrcfzRKcNiooH7DwaqUgfvskPlaZbjqpi=-A7YG=aW4cI9F9xMr60YJwCJAH=keTigSjKzsU3RCfgp2-ZrOaJ51atYBz4HKajedUtgMni-_=bMNt19RSAmj8LfB=eufqMZYB-JUIC4HL6Cr-hqJqPT2Saex35Z8nUu7Jq-SoeB55wRNcWv7AOEsQJaqauzuxD8pEqpa=tFV_nM9-pNuDhL97UohixDWB2eEwnVJZpbDfmter0n9VL0josq-4db=KjxcZQ=uFzj9iLKCT34vEiJZSqamoYnw8iMP0apvJJ9YDndJM4=rvO6=c_hvCvixFpNRi0ZxwA_9vQ36a302fPtd=-qzqOfd1PVKvFBdugb4DhJPN4JEGnll4=g5ik7yQlySoLE64hJMpuLFpSEc2P3Q08e08I_ebAEvuLUlMApYasohcHFwoBstgtzceD7FAMeEf8nLfifHVFq=wqWBTmVkS5ZaO=MCs9MmgVkzPbrCxQ0KDx-lD9RxCteiOjv56ZfT7-LfPuMW44anaBPjNLyxagz0lWJQUsTBHPQqtV-UdueAFWGk0B_7PhcMe4Jq94mqg8A=Tvva6eNty-86z-Zu=RcOeVsF7yrEfSw_hj5QI07mbMWcR-6HJS4pvLCsOv=tIMVZdqtGpQOK5=eJ7LgpcLPuujm7sZ-brch871tnFBi8bLP1uVpYIMgn=5YmdRVg3JtinWAV7TI9xGbzeAtWYDsV9O9CYGWSIQaiw1GZKGH5vkeAIwILStUSEH5tOkeMqbEuLNUncy7jVjuCEvn6hFni7FRJ6GGFjti_BjVFQPIc7ae44Bk_oHzowR3ZINf_7NofKyib4_86H3tClF3eN4N6RLFitC6JPNJAw-Ow7GmUwonO_QrlOSqHPi_wSvlGT4tV8_Al9AE78f-LsmjtjogfLZT9fmEEjw12FZSysEuMD8mghUuhD=fF_10", "fflecat0rx-b" -> "-23jicv", "fflecat0rx-c" -> "AOAHqvJ5AQAAKAd3liwTny4wDOHIyi31YQrjNJzPs4kcw18CFYipNY762P3c", "fflecat0rx-d" -> "AAaihIjBDKGNgUGASZAQhISy1WKIqTWO-tj93AAAAAAbSGaUALD7buFAoigBp_eKAr9gltA", "fflecat0rx-f" -> "A38dq_J5AQAAeZ4thvRKMI5gNF0RBJdCbTSg_6vsd-FUDvBR0kt83VmyKf72AcbLtbUAAAAAAAAAAAAAAAAAAA==", "fflecat0rx-z" -> "q", "origin" -> "https://identity.nonprod.onehealthcareid.com", "screennumber" -> "1", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "empty", "sec-fetch-mode" -> "cors", "sec-fetch-site" -> "same-origin", "x-csrf" -> "OID_TOKEN", "x-requested-with" -> "AsyncRequest", "x-sessntabid" -> "pcixjzhq9f", "x-tab-id" -> "ikO5W7HE")
        val headers_11 = Map( "accept" -> "*/*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "script", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "same-origin")
        val headers_12 = Map( "accept" -> "application/json, text/plain, */*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "screennumber" -> "1", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "empty", "sec-fetch-mode" -> "cors", "sec-fetch-site" -> "same-origin", "x-csrf" -> "OID_TOKEN", "x-requested-with" -> "AsyncRequest", "x-sessntabid" -> "pcixjzhq9f")
        val headers_13 = Map( "Accept" -> "*/*", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Origin" -> "https://identity.nonprod.onehealthcareid.com", "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> "cors", "Sec-Fetch-Site" -> "cross-site", "content-type" -> "text/plain", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_14 = Map( "accept" -> "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "image", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "same-origin")
        val headers_16 = Map( "accept" -> "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "origin" -> "https://identity.nonprod.onehealthcareid.com", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "document", "sec-fetch-mode" -> "navigate", "sec-fetch-site" -> "same-origin", "sec-fetch-user" -> "?1", "upgrade-insecure-requests" -> "1")
        val headers_17 = Map( "Accept" -> "*/*", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Content-Type" -> "text/plain;charset=UTF-8", "Origin" -> "https://rba.onehealthcareid.com", "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_19 = Map( "Accept" -> "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Cache-Control" -> "max-age=0", "Sec-Fetch-Dest" -> "document", "Sec-Fetch-Mode" -> "navigate", "Sec-Fetch-Site" -> "cross-site", "Sec-Fetch-User" -> "?1", "Upgrade-Insecure-Requests" -> "1", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_20 = Map( "Accept" -> "*/*", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "script", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_21 = Map( "Accept" -> "text/css,*/*;q=0.1", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "style", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_26 = Map( "Accept" -> "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "image", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_51 = Map( "accept" -> "*/*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "script", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "cross-site")
        val headers_52 = Map( "accept" -> "*/*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "origin" -> "https://ohpe-test3.optum.com", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "empty", "sec-fetch-mode" -> "cors", "sec-fetch-site" -> "cross-site")
        val headers_53 = Map( "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headers_61 = Map( "accept" -> "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "image", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "cross-site")
        val headers_65 = Map( "Accept" -> "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Cache-Control" -> "max-age=0", "Origin" -> "https://ohpe-test3.optum.com", "Sec-Fetch-Dest" -> "document", "Sec-Fetch-Mode" -> "navigate", "Sec-Fetch-Site" -> "same-origin", "Sec-Fetch-User" -> "?1", "Upgrade-Insecure-Requests" -> "1", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headersSearch_0 = Map( "Accept" -> "text/css,*/*;q=0.1", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "style", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
val headersSearch_3 = Map( "Accept" -> "*/*", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "script", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
val headersSearch_4 = Map( "Accept" -> "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Cache-Control" -> "max-age=0", "Origin" -> "https://ohpe-test3.optum.com", "Sec-Fetch-Dest" -> "document", "Sec-Fetch-Mode" -> "navigate", "Sec-Fetch-Site" -> "same-origin", "Sec-Fetch-User" -> "?1", "Upgrade-Insecure-Requests" -> "1", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
val headersSearch_9 = Map( "Accept" -> "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "Accept-Encoding" -> "gzip, deflate, br", "Accept-Language" -> "en-US,en;q=0.9", "Sec-Fetch-Dest" -> "image", "Sec-Fetch-Mode" -> "no-cors", "Sec-Fetch-Site" -> "same-origin", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headersSearch_29 = Map( "accept" -> "*/*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "script", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "cross-site")
        val headersSearch_30 = Map( "accept" -> "*/*", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "origin" -> "https://ohpe-test3.optum.com", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "empty", "sec-fetch-mode" -> "cors", "sec-fetch-site" -> "cross-site")
        val headersSearch_31 = Map( "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0")
        val headersSearch_39 = Map( "accept" -> "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8", "accept-encoding" -> "gzip, deflate, br", "accept-language" -> "en-US,en;q=0.9", "sec-ch-ua" -> """ Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90""", "sec-ch-ua-mobile" -> "?0", "sec-fetch-dest" -> "image", "sec-fetch-mode" -> "no-cors", "sec-fetch-site" -> "cross-site")
}
